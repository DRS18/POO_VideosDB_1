Starting audit...
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/entertainment/Season.java:24:42: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:3:8: Unused import - fileio.ShowInput. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:13:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:17:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:21:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:25:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:29:17: Parameter title should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:29:31: Parameter year should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:29:41: Parameter cast should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:30:17: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Show.java:33:18: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:5:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:6:21: Parameter actionId should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:6:35: Parameter actionType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:6:54: Parameter type should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:6:67: Parameter username should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:7:21: Parameter objectType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:7:40: Parameter sortType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:7:57: Parameter criteria should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:8:21: Parameter title should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:8:35: Parameter genre should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:8:49: Parameter number should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:8:61: Parameter grade should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:9:21: Parameter seasonNumber should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Commands.java:9:39: Parameter filters should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:4:8: Unused import - fileio.SerialInputData. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:8:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:20:19: Parameter title should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:20:33: Parameter year should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:20:43: Parameter cast should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:21:19: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:21:45: Parameter numberSeason should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:22:19: Parameter seasons should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:28:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'getNumberOfSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'getNumberOfSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:32:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'getSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'getSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:36: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:38:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:40:26: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:41:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Serial.java:42:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:3:8: Unused import - fileio.UserInputData. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:19:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:23:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:27:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:31:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:35:17: Parameter username should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:35:34: Parameter subscriptionType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:36:17: Parameter history should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:37:17: Parameter favoriteMovies should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:44:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:46:24: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:47:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:48:66: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:49:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/User.java:50:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:21:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:25:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:29:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:33:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:37:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getObjectType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getObjectType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:41:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getSortType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getSortType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:45:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCriteria' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCriteria' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:49:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:53:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:57:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:61:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getGrade' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getGrade' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:65:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getSeasonNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getSeasonNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:69:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:73:19: Parameter actionId should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:73:33: Parameter actionType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:73:52: Parameter type should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:73:65: Parameter username should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:74:19: Parameter objectType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:74:38: Parameter sortType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:74:55: Parameter criteria should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:74:72: Parameter title should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:75:19: Parameter genre should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:75:33: Parameter number should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:75:45: Parameter grade should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:75:59: Parameter seasonNumber should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:76:19: Parameter filters should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:92:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:94:26: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:95:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:96:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:97:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:98:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:99:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:100:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:101:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:102:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:103:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:104:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:105:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:106:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Action.java:107:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:4:8: Unused import - java.util.HashMap. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:6:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:12:42: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:21:5: Class 'Season' looks like designed for extension (can be subclassed), but the method 'getSeason' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Season' final or making the method 'getSeason' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:25:5: Class 'Season' looks like designed for extension (can be subclassed), but the method 'getUsersRecord' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Season' final or making the method 'getUsersRecord' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:29:5: Class 'Season' looks like designed for extension (can be subclassed), but the method 'getCurrentSeason' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Season' final or making the method 'getCurrentSeason' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:33:5: Class 'Season' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Season' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:37:5: Class 'Season' looks like designed for extension (can be subclassed), but the method 'getRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Season' final or making the method 'getRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Season.java:41:5: Class 'Season' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Season' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:8:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:17:30: Variable 'actions' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:22:22: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:22:22: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:22:23: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:31:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'putActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'putActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:31:27: Parameter input should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:39:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'putMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'putMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:39:27: Parameter input should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:47:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'putSerials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'putSerials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:47:28: Parameter input should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:51:49: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:56:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'putUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'putUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:56:26: Parameter input should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:77:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'writeObject' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'writeObject' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:113:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'commandFavorite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'commandFavorite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:113:33: Parameter id should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:113:41: Parameter username should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:113:58: Parameter title should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:113:72: Parameter arrayResult should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:124:30: '-3' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:127:27: '-3' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:136:30: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:137:53: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:137:53: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:137:59: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:137:59: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:141:27: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:147:31: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:147:43: '-3' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:150:43: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:150:43: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:150:49: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:150:49: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:158:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'commandView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'commandView' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:158:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:158:29: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:158:30: Parameter id should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:158:38: Parameter username should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:158:55: Parameter title should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:158:69: Parameter arrayResult should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:172: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:173:85: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:177:30: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:182:27: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:187:31: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:189:73: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:199:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'commandRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'commandRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:199:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:199:31: Parameter id should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:199:39: Parameter username should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:199:56: Parameter title should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:199:70: Parameter grade should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:199:84: Parameter season should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:200:31: Parameter arrayResult should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:202:18: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:214:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:214:19: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:224:85: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:230:38: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:236:89: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:251:85: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:256: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:257: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:258:38: '-2' is a magic number. [MagicNumber]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:263: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:264:89: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:276:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'howManyFavourites' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'howManyFavourites' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:276:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:276:38: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:276:39: Parameter movie should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:280:73: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:290:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'FoundMoviesByFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'FoundMoviesByFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:290:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:290:29: Name 'FoundMoviesByFilters' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:290:50: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:290:51: Parameter years should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:290:71: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:291:49: Parameter words should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:291:69: Parameter awards should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:292:49: Parameter shows should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:310:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:327:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:337:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'queryFavouriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'queryFavouriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:337:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:337:38: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:337:39: Parameter id should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:337:47: Parameter number should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:337:59: Parameter years should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:337:79: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:338:39: Parameter words should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:338:59: Parameter awards should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:338:80: Parameter sortType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:339:39: Parameter arrayResult should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:341:26: Name 'FoundMovies' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:349:77: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:353:66: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:362:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:364: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:368:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:378: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:384:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'FoundSerialsByFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'FoundSerialsByFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:384:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:384:30: Name 'FoundSerialsByFilters' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:384:52: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:384:53: Parameter years should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:384:73: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:385:51: Parameter words should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:385:71: Parameter awards should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:386:51: Parameter shows should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:404:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:421:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:431:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'howManyFavouritesSerials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'howManyFavouritesSerials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:431:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:431:45: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:431:46: Parameter serial should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:435:74: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:444:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'queryFavouriteShows' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'queryFavouriteShows' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:444:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:444:37: Parameter id should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:444:45: Parameter number should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:444:57: Parameter years should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:444:77: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:445:37: Parameter words should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:445:57: Parameter awards should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:445:78: Parameter sortType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:446:37: Parameter arrayResult should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:447: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:447:27: Name 'FoundSerials' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:453:85: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:455: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:457:74: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:468:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:470: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:474:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:487:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'queryLongestMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'queryLongestMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:487:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:487:35: Parameter id should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:487:43: Parameter number should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:487:55: Parameter years should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:487:75: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:488:35: Parameter words should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:488:55: Parameter awards should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:488:76: Parameter sortType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:489:35: Parameter arrayResult should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:490:26: Name 'FoundMovies' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:505:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:507: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:512:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:518:93: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:534:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'getSerialDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'getSerialDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:534:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:534:38: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:534:39: Parameter serial should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:544:5: Class 'DataBase' looks like designed for extension (can be subclassed), but the method 'queryLongestSerial' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataBase' final or making the method 'queryLongestSerial' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:544:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:544:36: Parameter id should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:544:44: Parameter number should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:544:56: Parameter years should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:544:76: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:545:35: Parameter words should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:545:55: Parameter awards should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:545:76: Parameter sortType should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:546:35: Parameter arrayResult should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:547: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:547:27: Name 'FoundSerials' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:563:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:565: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:570:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/DataBase.java:576:93: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:4:8: Unused import - fileio.ActorInputData. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:15:18: Parameter name should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:15:31: Parameter careerDescription should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:16:18: Parameter filmography should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:17:18: Parameter awards should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:24:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:28:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:32:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:36:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:40:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:42:25: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:43:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:44:68: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:45:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Actor.java:46:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:1:9: Name 'myClasses' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:3:8: Unused import - fileio.MovieInputData. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:6:8: Unused import - java.util.HashMap. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:8:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:10:32: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:14:42: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:16:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:20:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getUsersRecord' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getUsersRecord' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:24:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:28:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:32:18: Parameter title should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:32:32: Parameter year should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:32:42: Parameter cast should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:33:18: Parameter genres should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:33:44: Parameter duration should be final. [FinalParameters]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:38:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:40:25: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/myClasses/Movie.java:41:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/main/Main.java:79:18: Name 'my_db' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/main/Main.java:89:78: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/main/Main.java:90:77: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/main/Main.java:96:85: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/main/Main.java:103:85: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/main/Main.java:112:83: ')' is preceded with whitespace. [ParenPad]
[ERROR] /home/paune/Desktop/POO/TEME/Tema-1-POO-2020/./src/main/Main.java:116:83: '3' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 330 errors.
